.. _Developer_Guide:

###################
Developer Guide
###################

`ts_imsim` is a package designed to create Rubin Observatory Active Optics Sysytem (AOS) simulations using `imSim <https://github.com/LSSTDESC/imSim>`_.
The main functionality is designed around simulations of the Rubin AOS closed loop using the Rubin `Wavefront Estimation Pipeline (WEP) <https://github.com/lsst-ts/ts_wep>`_ and `Optical Feedback Control (OFC) <https://github.com/lsst-ts/ts_ofc>`_.
In each iteration of the closed loop `ts_imsim` generates images for a configuration of the Simonyi Survey Telescope using LSSTCam or LSST ComCam, generates wavefront estimates in terms of Zernike polynomials using WEP, and derives corrections to improve image quality based upon those estimates with OFC.
The updated telescope configuration is then used to simulate images for the next iteration.
After a number of iterations the AOS system should converge upon a stable configuration that produces the best image quality based upon the perturbations in the initial configuration.

.. _ts_imsim_Modules:

Modules
=======

.. toctree::
   :maxdepth: 1

The classes and files for each module are listed below.

.. _ts_imsim_modules_imsim:

imsim
-------------

This module contains the closed loop methods.

.. mermaid:: ../uml/imsimClass.mmd
    :caption: Class diagram of ts_imsim.

* **ClosedLoopTask**: Run the imSim based closed loop for AOS.
* **ImsimCmpt**: Handle I/O with imSim and create configuration files for the simulations.
* **ObsMetadata**: Class for storing observation metadata.
* **OpdMetrology**: Calculate Optical Path Difference (OPD) related metrology.
* **SkySim**: Create simulated sky catalogs.

.. _ts_imsim_modules_imsim_utils:

imsim.utils
-------------

This module contains utility functions that are used in main imsim module.

* **metroTool**: OPD metrology related functions.
* **plotUtil**: Functions to plot summary information on closed loop results.
* **SensorWavefrontError**: Class to contain the wavefront errors for a single sensor.
* **utility**: I/O utility functions and **ModifiedEnvironment** class to help with mac OS port.

.. _ts_imsim_API:

Python API reference
====================

This section is autogenerated from docstrings.

.. automodapi:: lsst.ts.imsim
    :no-inheritance-diagram:

.. automodapi:: lsst.ts.imsim.utils
    :no-inheritance-diagram:

.. _ts_imsim_contributing:

Contributing
============

To contribute, please start a new pull request on `GitHub <https://github.com/lsst-ts/ts_imsim>`_.
Feature requests shall be filed in JIRA with *ts_aos* as the component.
In all cases, reaching out to the :ref:`contacts for this module <Contact_Personnel>` is recommended.
